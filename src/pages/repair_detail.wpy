<template>
    <machinedetails :machine.sync="machineDetail"></machinedetails>
    <view class="title_vw">客户信息</view>
    <view class="line_vw">
        <view class="line_half_vw">
            <text>客户：</text>
            <text>{{repairRecordDetail.machineCustomerName}}</text>
        </view>
        <view class="line_half_vw">
            <text>地址：</text>
            <text>{{repairRecordDetail.customerAddressInRepairRecord}}</text>
        </view>
    </view>
    <view class="line_vw">
        <view class="line_half_vw">
            <text>联系人：</text>
            <text>{{repairRecordDetail.customerNameInRepairRecord}}</text>
        </view>
        <view class="line_half_vw">
            <text>电话：</text>
            <text>{{repairRecordDetail.customerPhoneInRepairRecord}}</text>
        </view>
    </view>
    <view class="title_vw">报修信息</view>
    <view class="line_vw">
        <text>标题：</text>
        <text>{{repairRecordDetail.repairRequestTitle}}</text>
    </view>
    <view class="line_vw">
        <text>描述：{{repairRecordDetail.repairRequestContent}}</text>
    </view>
    <button class="single_btn" size="mini" disabled="{{isSpeaking}}" loading="{{isSpeaking}}" type="{{isSpeaking ? 'warn' : 'primary'}}" @tap="voicePlay">播放语音</button>
    <view class="line_vw">
        <text>照片：</text>
    </view>
    <image class="pre_repair_image" mode="aspectFill" wx:for="{{preRepairImageArr}}" @tap="changePreRepairImagePreview" data-src="{{item}}" src="{{item}}"></image>
    <view wx:if="{{isChargePerson}}">
        <view class="button_view" wx:if="{{isReady}}">
          <button class="single_btn" @tap="bindAcceptOrder" size="mini" type="primary">确认接单</button>
        </view>
        <view wx:else >
            <view class="title_vw">维修详情</view>
            <picker @change="bindResultPickerChange" value="{{resultIndex}}" range="{{resultMark}}">
                <view class="line_vw">请选择本次维修结果：
                    <view class="line_picker">{{resultMark[resultIndex]}}</view>
                </view>
            </picker>
            <view wx:if="{{isResolved}}">
                <view class="list_view" wx:for="{{repairRecordList}}" wx:key="listItem" @tap='bindRepairRecordNum({{index}})'>
                    <picker @change="bindPartPickerChange" value="{{listItem.partIndex}}" range="{{partMark}}">
                        <view class="line_vw">故障部位：
                            <view class="line_picker">{{partMark[listItem.partIndex]}}</view>
                        </view>
                    </picker>
                    <view class="line_vw">
                        <text>问题描述：</text>
                    </view>
                    <textarea @input="bindIssueDescriptionInput" class="textarea" style="height: 3em" placeholder="输入问题原因"></textarea>
                    <view class="line_vw">
                        <text>处理方法：</text>
                    </view>
                    <textarea @input="bindRepairMethodInput" class="textarea" style="height: 3em" placeholder="输入维修方法"></textarea>
                    <view class="line_vw">
                        <text>照片：</text>
                        <button class="single_btn" @tap="bindPreviewImage" size="mini" type="primary">点击拍照/选图</button>
                    </view>
                    <image class="repair_image" mode="aspectFill" wx:for="{{listItem.repairImageArr}}" @tap="changeRepairImagePreview" data-src="{{item}}" src="{{item}}"></image>
                    <view class="line_vw">
                        <text class="line_half_vw">配件名</text>
                        <text class="line_half_vw">是否寄回</text>
                    </view>
                    <view class="input_line_vw" wx:for="{{listItem.partsList}}" @tap='bindPartsNum({{index}})'>
                        <input class="line_input" type="text" @input="bindPartInput" placeholder="输入配件名" focus="true"/>
                        <switch class="switch" type="checkbox" @change="bindSwitch"/>
                        <icon class="clear_icon" size='20' color="red" type='clear' @tap="bindClear"></icon>
                    </view>
                    <button class="double_btn" @tap="bindAddPartListBtn" size="mini" >添加配件信息</button>
                </view>
                <button class="add_btn" @tap="bindAddRepairListBtn" >添加更多故障信息</button>
            </view>
            <view class="button_view">
                <button class="double_btn" @tap="bindUploadFeedback" size="mini" type="primary">提交</button>
                <button class="double_btn" @tap="bindNavigateBack" size="mini" >返回</button>
            </view>
        </view>
    </view>
</template>
<style lang="less">
    .title_vw {
        padding: 15rpx;
        font-size: large;
        font-weight: bold;
        background: #EBEBEB;
        color: #000000;
    }
    .line_vw {
        margin: 20rpx;
        display: flex;
        .line_half_vw {
            width: 50%;
            height: 60%
        }
    }
    .list_view {
        border-bottom: 1px solid #ababab;
    }
    .input_line_vw {
        margin: 20rpx;
        display: flex;
        border-bottom: 1px solid #ababab;
        .line_input {
            width: 50%;
        }
        .switch{
            width: 40%;
        }
        .clear_icon {
            width: 10%;
        }
    }
    .line_picker {
        background: #EEC591;
    }
    .textarea {
        width: 90%;
        margin-left: 20rpx;
        background-color: #fff;
    }
    .button_view {
      margin: 50rpx 10rpx;
    }
    .single_btn {
        margin-left: 25rpx;
        width: 50%;
    }
    .double_btn {
        margin: 25rpx;
        display: flex;
    }
    .add_btn {
        font-size: 26rpx;
    }
    .pre_repair_image {
        margin-left: 2.5%;
        width: 30%;
        height: 200rpx;
    }
    .repair_image {
        margin-left: 2.5%;
        width: 30%;
        height: 200rpx;
    }
</style>
<script>
  /* eslint-disable no-undef,eqeqeq */

    import wepy from 'wepy'
    import MachineDetails from '../components/machine_details'
    import api from '@/api/api'
    import {
        USER_ID,
        REPAIR_STATUS_SIGNED_TO_REPAIRER,
        REPAIR_STATUS_REPAIRER_ACCEPTED,
        REPAIR_STATUS_REPAIR_NG
    } from '@/utils/constant'
    export default class RepairDetail extends wepy.page {
      config = {
        navigationBarTitleText: '维修详情'
      }
      components = {
        machinedetails: MachineDetails
      };

      data = {
        machineDetail: {},
        repairRecordDetail: {},
        isSpeaking: false,
        isChargePerson: false,
        preRepairImageArr: ['http://img1.3lian.com/2015/w7/85/d/101.jpg', 'http://img1.3lian.com/2015/w7/85/d/101.jpg', 'http://img1.3lian.com/2015/w7/85/d/101.jpg'],
        isReady: true,
        resultMark: ['没解决', '已解决'],
        resultIndex: 0,
        isResolved: false,
        repairRecordList: [{
          partIndex: 0,
          issueDescriptionInput: '',
          repairMethodInput: '',
          repairImageArr: [],
          partsList: []}
        ],
        repairRecordIndex: 0,
        partMark: ['电脑故障', '框架故障', '上轴故障', '下轴故障'],
        isPartsShow: false,
        partsIndex: 0
      };
      methods = {
        voicePlay() {
          console.log('eventing_repair_info:手指按下了...')
          this.isSpeaking = true
          const innerAudioContext = wepy.createInnerAudioContext()
          innerAudioContext.autoplay = true
          innerAudioContext.src = this.repairRecordDetail.repairRequestVoice
          innerAudioContext.onPlay(() => {
            console.log('开始播放')
          })
          innerAudioContext.onPause(() => {
            console.log('pause了')
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onStop(() => {
            console.log('stop了')
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onError((res) => {
            console.log(res.errMsg)
            console.log(res.errCode)
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onEnded(() => {
            console.log('bo完了')
            this.isSpeaking = false
            this.$apply()
          })
        },
        changePreRepairImagePreview(e) {
          var self = this
          wepy.previewImage({
            current: e.currentTarget.dataset.src,
            urls: self.data.preRepairImageArr
          })
        },
        async bindAcceptOrder() {
          this.repairRecordDetail.status = REPAIR_STATUS_REPAIRER_ACCEPTED
          let acceptOrderJson = await api.updateRepairRecord({
            query: this.repairRecordDetail
          })
          console.log(acceptOrderJson)
          if (acceptOrderJson.data.code !== 200) {
            wx.showModal({
              title: '接单失败！',
              content: '网络错误',
              showCancel: false,
              confirmColor: '#007aff',
              success: function () {
              }
            })
          } else {
            wx.showModal({
              title: '接单成功！',
              content: '接单成功',
              showCancel: false,
              confirmColor: '#007aff',
              success: function () {
                wepy.navigateBack()
              }
            })
          }
        },
          // 选择维修结果
        bindResultPickerChange(e) {
          console.log('结果picker发送选择改变，携带值为', e.detail.value)
          this.resultIndex = e.detail.value
          if (e.detail.value == 2 || e.detail.value == 1) {
            this.isResolved = true
          } else {
            this.isResolved = false
          }
          this.$apply()
        },
          // get点击的第几个故障
        bindRepairRecordNum(e) {
          console.log(e)
          this.repairRecordIndex = e
        },
          // 加入数据到数组中
        bindPartPickerChange(e) {
          console.log('部位picker发送选择改变，携带值为', e.detail.value)
          this.repairRecordList[this.repairRecordIndex].partIndex = e.detail.value
        },
        bindIssueDescriptionInput(e) {
          console.log(e.detail.value)
          this.repairRecordList[this.repairRecordIndex].issueDescriptionInput = e.detail.value
        },
        bindRepairMethodInput(e) {
          console.log(e.detail.value)
          this.repairRecordList[this.repairRecordIndex].repairMethodInput = e.detail.value
        },
        async bindPreviewImage() {
          let res = await wepy.chooseImage({count: 3})
          if (res.errMsg === 'chooseImage:ok') {
            let tempFilePaths = res.tempFilePaths
            this.repairRecordList[this.repairRecordIndex].repairImageArr = tempFilePaths
            console.log('srcssssssssssssssssssssssss')
            console.log(tempFilePaths)
            this.$apply()
          }
        },
        changeRepairImagePreview(e) {
          var self = this
          wepy.previewImage({
            current: e.currentTarget.dataset.src,
            urls: self.data.repairRecordList[this.repairRecordIndex].repairImageArr
          })
        },
          // 点击添加另一个故障信息
        bindAddRepairListBtn() {
          this.repairRecordList = this.repairRecordList.concat({
            partIndex: 0,
            issueDescriptionInput: '',
            repairMethodInput: '',
            repairImageArr: [],
            partsList: []})
          this.$apply()
        },
          // 点击添加配件更换信息
        bindAddPartListBtn() {
          this.repairRecordList[this.repairRecordIndex].partsList = this.repairRecordList[this.repairRecordIndex].partsList.concat({
            partName: '',
            partStatus: false
          })
          this.isPartsShow = true
          this.$apply()
        },
          // get点击的行号
        bindPartsNum(e) {
          console.log(e)
          this.partsIndex = e
        },
          // 根据行号加入数据到数组中
        bindPartInput(e) {
          console.log(e.detail.value)
          this.repairRecordList[this.repairRecordIndex].partsList[this.partsIndex].partName = e.detail.value
          console.log(this.partsList)
        },
          // 根据行号加入数据到数组中
        bindSwitch(e) {
          console.log(e.detail.value)
          this.repairRecordList[this.repairRecordIndex].partsList[this.partsIndex].partStatus = e.detail.value
          console.log(this.partsList)
        },
          // 根据行号删除数组中的数据
        bindClear() {
          this.repairRecordList[this.repairRecordIndex].partsList.splice(this.partsIndex, 1)
          this.$apply()
        },
        async bindUploadFeedback() {
          if (this.resultIndex == 0) {
                // 维修结果：没修完
            this.repairRecordDetail.status = REPAIR_STATUS_REPAIR_NG
            let repairNGJson = await api.updateRepairRecord({
              query: this.repairRecordDetail
            })
            console.log(repairNGJson)
            if (repairNGJson.data.code !== 200) {
              wx.showModal({
                title: '上传失败！',
                content: '网络错误，请检查网络',
                showCancel: false,
                confirmColor: '#007aff',
                success: function () {
                }
              })
            } else {
              wx.showModal({
                title: '维修结果：没修完！',
                content: '将申请重新派单',
                showCancel: false,
                confirmColor: '#007aff',
                success: function () {
                  wepy.navigateBack()
                }
              })
            }
          } else {
            this.repairCustomerFeedback.customerMark = this.index
            this.repairCustomerFeedback.customerSuggestion = this.customerSuggestion
            let repairCustomerFeedbackJson = JSON.stringify(this.repairCustomerFeedback)
            const repairFeedbackJson = await api.uploadRepairFeedback({
              query: {
                repairCustomerFeedback: repairCustomerFeedbackJson,
                repairRecordId: this.machineDetail.id
              }
            })
            console.log('repairFeedbackJson:')
            console.log(repairFeedbackJson)
            console.log(repairFeedbackJson.data.code)
            if (repairFeedbackJson.data.code === 200) {
              wx.showModal({
                title: '上传成功！',
                content: '信息已上传',
                showCancel: false,
                confirmColor: '#007aff',
                success: function () {
                  wepy.navigateBack()
                }
              })
            } else {
              wx.showModal({
                title: '上传失败！',
                content: '网络错误，请检查网络',
                showCancel: false,
                confirmColor: '#007aff',
                success: function () {
                }
              })
            }
          }
        },
        bindNavigateBack() {
          wepy.navigateBack()
        }
      };

      events = {};

      onLoad(options) {
        console.log(options)
        this.machineDetail = JSON.parse(options.machineDetail)
        console.log(this.machineDetail)
        this.preRepairImageArr = this.machineDetail.repairRequestPictures.split(',')
        if (this.machineDetail.status === REPAIR_STATUS_SIGNED_TO_REPAIRER) {
          this.isReady = true
        } else {
          this.isReady = false
        }
        this.getRepairRecord(this.machineDetail.id)
        this.$apply()
      };

      async getRepairRecord(repairRecordId) {
        let repairRecordJson = await api.getRepairRecordList({
          query: {
            repairRecordId: repairRecordId
          }
        })
        console.log('repairRecordJson 获取 :')
        console.log(repairRecordJson)
        console.log(repairRecordJson.data.data.list)
        if (repairRecordJson.data.data.list.length > 0) {
          this.repairRecordDetail = repairRecordJson.data.data.list[0]
          this.preRepairImageArr = this.repairRecordDetail.repairRequestPictures.split(',')
          if (wepy.getStorageSync(USER_ID) == repairRecordJson.data.data.list[0].repairChargePerson) {
            this.isChargePerson = true
          } else {
            this.isChargePerson = false
          }
        } else {
          wx.showModal({
            title: '获取机器信息出错！',
            content: '网络错误',
            showCancel: false,
            confirmColor: '#007aff',
            success: function () {
              wepy.navigateBack()
            }
          })
        }
        this.$apply()
      };

        // Other properties
    }
</script>
