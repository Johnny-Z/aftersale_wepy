<template xmlns:wx="http://www.w3.org/1999/xhtml">
  <machinedetails :machine.sync="machineDetail"></machinedetails>
  <view class="detail_view_column">
    <view class="title_view" @tap="bindIsShowCustomer">
      <view class="title_view_fir_part">
        <image class="detail_icon" src="../images/icon_detail_customer.png"></image>
        <text class="title_tx">客户信息</text>
      </view>
      <view class="title_view_sec_part">
        <image wx:if="{{isShowCustomer}}" class="arrow_icon" src="../images/icon_arrow_down.png"></image>
        <image wx:else class="arrow_icon" src="../images/icon_arrow_up.png"></image>
      </view>
    </view>
    <view wx:if="{{isShowCustomer}}" class="main_view">
      <view class="view_row">
        <text class="label_tx">客户名：</text>
        <text class="info_tx">{{repairRecordDetail.machineCustomerName}}</text>
      </view>
      <view class="view_row">
        <text class="label_tx">联系人：</text>
        <text class="info_tx">{{repairRecordDetail.customerNameInRepairRecord}}</text>
      </view>
      <view class="view_row">
        <text class="label_tx">联系电话：</text>
        <text class="info_tx">{{repairRecordDetail.customerPhoneInRepairRecord}}</text>
      </view>
      <view class="view_row">
        <text class="label_tx">联系地址：</text>
        <text class="info_tx">{{repairRecordDetail.customerAddressInRepairRecord}}</text>
      </view>
    </view>
  </view>
  <view wx:if="{{isChargePerson}}">
    <button wx:if="{{isReady}}" class="single_button" @tap="bindAcceptOrder" >确认接单</button>
    <view wx:else >
      <view class="detail_view_column">
          <view class="title_view">
            <view class="title_view_fir_part">
              <image class="detail_icon" src="../images/icon_detail_repair.png"></image>
              <text class="title_tx">维修详情</text>
            </view>
          </view>
          <view class="main_view">
            <view class="view_row">
              <text class="label_tx">维修结果：</text>
              <picker class="picker_view" @change="bindResultPickerChange" value="{{resultIndex}}" range="{{resultMark}}">
                <text class="picker_tx">{{resultMark[resultIndex]}}</text>
              </picker>
            </view>
            <view wx:if="{{isResolved}}">
              <view class="view_row">
                <text class="label_tx">故障部位：</text>
                <checkbox-group class="checkbox_label" @change="bindCheckboxChange">
                  <label wx:for="{{partMark}}">
                    <view class="checkbox_view">
                      <checkbox value="{{item.id}}"/>{{item.name}}
                    </view>
                  </label>
                </checkbox-group>
              </view>
              <view class="view_row" @tap="showDescriptionInput">
                <text class="label_tx">问题描述：</text>
                <image class="edit_icon" src="../images/icon_btn_edit.png"></image>
              </view>
              <modal wx:if="{{hiddenDescription}}" title="问题描述" confirm-text="确定" no-cancel="true" @confirm="listenerDescription" catchtouchmove="noMove">
                <textarea @input="bindIssueDescriptionInput" class="textarea_input" value="{{repairActualInfo.issueDescription}}" fixed="true" placeholder="输入问题原因"></textarea>
              </modal>
              <text class="get_input_tx">{{repairActualInfo.issueDescription}}</text>
              <view class="view_row" @tap="showMethodInput">
                <text class="label_tx">处理方法：</text>
                <image class="edit_icon" src="../images/icon_btn_edit.png"></image>
              </view>
              <modal wx:if="{{hiddenMethod}}" title="处理方法" confirm-text="确定" no-cancel="true" @confirm="listenerMethod" catchtouchmove="noMove">
                <textarea @input="bindRepairMethodInput" class="textarea_input" value="{{repairActualInfo.repairMethod}}" fixed="true" placeholder="输入维修方法"></textarea>
              </modal>
              <text class="get_input_tx">{{repairActualInfo.repairMethod}}</text>
              <view class="view_row">
                  <text class="label_tx">照片（3张）：（长按删除）</text>
              </view>
              <view class="view_row">
                <image class="photo_image" mode="aspectFill" wx:for="{{repairImageArr}}" @tap="changeRepairImagePreview" @longtap="deleteImage" @touchstart="touchStart" @touchend="touchEnd" data-src="{{item}}" src="{{item}}"></image>
                <image hidden="{{hiddenPhoto}}" class="photo_image" src="../images/icon_btn_add_photo.png" @tap="bindPreviewImage"></image>
              </view>
              <view class="view_row">
                <text class="label_tx">配件：</text>
              </view>
              <view class="view_row" wx:for="{{partsInfoList}}" >
                <text class="info_tx">{{item.partsName}}-{{(item.partsStatus=='1')? '不寄回':'寄回'}}</text>
                <image class="edit_icon" src="../images/icon_btn_delete.png" @tap="bindClear({{index}})"></image>
              </view>
              <view class="view_row">
                <button class="add_btn" @tap="showPartsInfo" >添加配件信息</button>
              </view>
              <modal wx:if="{{hiddenPartsInfo}}" title="配件" confirm-text="确定" no-cancel="true" @confirm="listenerPartsInfo" catchtouchmove="noMove">
                <view class="view_row">
                  <text class="label_tx">配件名称：</text>
                  <input class="part_input" type="text" value="{{partsName}}" @input="bindPartInput" placeholder="输入配件名"/>
                </view>
                <view class="view_row">
                  <text class="label_tx">是否寄回：</text>
                  <radio-group @change="radioChange">
                    <radio class="radio" value="1" checked="{{radioChecked}}">否</radio>
                    <radio class="radio" value="2" >是</radio>
                  </radio-group>
                </view>
              </modal>
            </view>
            <view wx:else>
              <view class="view_row">
                <text class="label_tx">故障部位：</text>
                <checkbox-group class="checkbox_label" @change="bindCheckboxChange">
                  <label wx:for="{{partMark}}">
                    <view class="checkbox_view">
                      <checkbox value="{{item.id}}"/>{{item.name}}
                    </view>
                  </label>
                </checkbox-group>
              </view>
              <view class="view_row" @tap="showDescriptionInput">
                <text class="label_tx">未解决问题描述：</text>
                <image class="edit_icon" src="../images/icon_btn_edit.png"></image>
              </view>
              <modal wx:if="{{hiddenDescription}}" title="未解决问题描述" confirm-text="确定" no-cancel="true" @confirm="listenerDescription" catchtouchmove="noMove">
                <textarea @input="bindIssueDescriptionInput" class="textarea_input" value="{{repairActualInfo.issueDescription}}" fixed="true" placeholder="输入未解决的问题"></textarea>
              </modal>
              <text class="get_input_tx">{{repairActualInfo.issueDescription}}</text>
              <view class="view_row" @tap="showMethodInput">
                <text class="label_tx">尝试过处理方法：</text>
                <image class="edit_icon" src="../images/icon_btn_edit.png"></image>
              </view>
              <modal wx:if="{{hiddenMethod}}" title="尝试过处理方法" confirm-text="确定" no-cancel="true" @confirm="listenerMethod" catchtouchmove="noMove">
                <textarea @input="bindRepairMethodInput" class="textarea_input" value="{{repairActualInfo.repairMethod}}" fixed="true" placeholder="输入尝试过的维修方法"></textarea>
              </modal>
              <text class="get_input_tx">{{repairActualInfo.repairMethod}}</text>
              <view class="view_row">
                  <text class="label_tx">照片（3张）：（长按删除）</text>
              </view>
              <view class="view_row">
                <image class="photo_image" mode="aspectFill" wx:for="{{repairImageArr}}" @tap="changeRepairImagePreview" @longtap="deleteImage" @touchstart="touchStart" @touchend="touchEnd" data-src="{{item}}" src="{{item}}"></image>
                <image hidden="{{hiddenPhoto}}" class="photo_image" src="../images/icon_btn_add_photo.png" @tap="bindPreviewImage"></image>
              </view>
            </view>

          </view>
      </view>
      <button class="single_button" @tap="bindUploadFeedback">提交</button>
    </view>
  </view>

  <view wx:if="{{roleId == 1||roleId == 2}}" class="list_column">
  <view class="detail_view_column">
    <view class="title_view" @tap="bindIsShowAssign">
      <view class="title_view_fir_part">
        <image class="detail_icon" src="../images/icon_detail_customer.png"></image>
        <text class="title_tx">派单信息  </text>
      </view>
      <view class="title_view_sec_part">
        <image wx:if="{{isShowAssign}}" class="arrow_icon" src="../images/icon_arrow_down.png"></image>
        <image wx:else class="arrow_icon" src="../images/icon_arrow_up.png"></image>
      </view>
    </view>
    <view wx:if="{{isShowAssign}}" class="main_view">
    <view class="view_row"  style="display:flex; justify-content:space-between ">
      <!--<text class="title_tx"> {{repairRecordDetail.facoryDate}} </text>-->
      <!--<view class="line_fir_tx">{{repairRecordDetail.facoryDate? repairRecordDetail.facoryDate: '暂无'}}</view>-->
      <view class="view_row">
        <text class="label_tx">发货日期：</text>
        <text class="info_tx"> {{repairRecordDetail.facoryDate}}</text>
      </view>
      </view>
    <view class="view_row" >
      <text class="label_tx" >保修期内：</text>
      <radio-group @change="warrantyRadioChange">
        <radio class="radio" value="已过保" checked="{{radioChecked}}">已过保</radio>
        <radio class="radio" value="未过保" >未过保</radio>
      </radio-group>
    </view>
      <view class="view_row" >
      </view>
    <view class="modal-dialog"
          style="display:flex; justify-content:space-between ">
      <text class="title_tx">人员 （维修中:安装中:保养中）      是否负责人</text>
    </view>
     <!--横向， 均匀分布-->
      <view class="modal-dialog"
            style="display:flex; justify-content:space-evenly ">

        <view class="modal-content">
          <checkbox-group  bindchange="paidanCheckboxChange">
            <label  wx:for="{{workersInfoList}}">
              <checkbox value="{{item.name}}" checked="{{item.checked}}">
               {{item.name }} ( {{item.repairTaskCount}} : {{item.installTaskCount}} : {{item.maintainTaskCount}})  &#12288;  &#12288;   </checkbox>
            </label>
            </checkbox-group>
        </view>
        <view class="modal-content"
              style=" justify-content: space-around;">
          <radio-group class="radio-group"
                       style=" justify-content:space-evenly"
                       bindchange="ownerRadioChange">
            <view style=" justify-content:space-evenly">

              <label style=" justify-content:space-evenly "
                     wx:for="{{workersInfoListinOwner}}">
                <!--<radio value="{{item.name}}" checked="{{item.checked}}"> {{item.value}} &nbsp; </radio>-->
                <!-- 注意： 这里的空格 &#12288; 不能去掉，否则radio-group会和checkBox不对齐-->
                <radio value="{{item.name}}" checked="{{item.checked}}"> {{item.value}} &#12288; </radio>
              </label>
            </view>
          </radio-group>
        </view>
      </view>

    <!-- 操作按钮 -->
    <view class="modal-footer">
      <button class="btn btn-confirm" bindtap="bindUploadAssignTask" data-status="confirm">确定</button>
    </view>
    </view>
    </view>

  </view>

  <!-- 非管理员，且非负责人时，不可接单-->
  <!--<view wx:else if="{{!isChargePerson}}"  class="list_column" >-->
    <!--<text class="title_tx"  style="display:flex; justify-content:space-evenly ">由负责人接单</text>-->
  <!--</view>-->

</template>
<script>
  /* eslint-disable no-undef,eqeqeq */

    import wepy from 'wepy'
    import MachineDetails from '../components/machine_details'
    import api from '@/api/api'
    import tip from '@/utils/tip'
    import {
        APIMALL,
        ROLE_ID,
        USER_ID,
        REPAIR_STATUS_SIGNED_TO_REPAIRER,
        REPAIR_STATUS_REPAIRER_ACCEPTED,
        REPAIR_STATUS_REPAIR_NG,
        REPAIR_STATUS_REPAIR_OK
    } from '@/utils/constant'
    export default class RepairDetail extends wepy.page {
      config = {
        navigationBarTitleText: '维修详情'
      }
      components = {
        machinedetails: MachineDetails
      };

      data = {

        roleId: '', 
        machineDetail: {},
        workerIndex: 0,
        workerList: ['请选择'],
        date: '2020-08-01',
        repairRecordDetail: {
          inWarrantyPeriod: '已过保'  //默认已过保
        },
        isShowCustomer: false,
        isShowRepair: true,
        isShowAssign: true,
        isSpeaking: false,
        isChargePerson: false,
        preRepairImageArr: [],
        isReady: true,
        resultMark: ['没解决', '已解决'],
        resultIndex: 0,
        isResolved: false,
        repairActualInfo: {
          repairRecordId: 0,
          issuePosition: '',
          afterResolvePictures: '',
          issueDescription: '',
          repairMethod: '',
          uploadFilesAmount: '',
          alreadyUploadedFilesNumber: '0'
        },
        hiddenDescription: false,
        hiddenMethod: false,
        hiddenPhoto: false,
        hiddenPartsInfo: false,
        repairImageArr: [],
        touchStartTime: 0,
        touchEndTime: 0,
        preRepairVoiceSrc: '',
        count: 0,
        repairRecordIndex: 0,
        partMark: [
            {id: 1, name: '电脑'},
            {id: 2, name: '框架'},
            {id: 3, name: '上轴'},
            {id: 4, name: '下轴'},
            {id: 5, name: '驱动'}
        ],
        partsName: '',
        partsStatus: '1',
        radioChecked: true,
        partsInfoList: [],
        workersInfoList: [],      //派单的所有 可选成员
        workersCheckedList: [],   //派单的所有 选中成员
        workersInfoListinOwner: [],  //派单的所有 可选成员(负责人那列)
        ownerName: ''     //该次维修的 负责人
      };
      methods = {
        paidanCheckboxChange: function (e) {
          console.log('派单 checkbox发生change事件，携带value值为：', e.detail.value)
          this.workersCheckedList = e.detail.value; //

        },

        ownerRadioChange(e) {
          console.log('负责人：', e.detail.value);
          this.ownerName = e.detail.value;
        },
        warrantyRadioChange(e){
          console.log('过保：', e.detail.value);
          if(e.detail.value == "未过保") {
            this.repairRecordDetail.inWarrantyPeriod = 1
          } else {
            this.repairRecordDetail.inWarrantyPeriod = 0
          }
        },

        noMove() {},
        bindIsShowCustomer() {
          let isShow = this.isShowCustomer
          this.isShowCustomer = !isShow
        },
        bindIsShowRepair() {
          let isShow = this.isShowRepair
          this.isShowRepair = !isShow
        },

        //派单折叠
        bindIsShowAssign() {
          let isShow = this.isShowAssign
          this.isShowAssign = !isShow
        },

     async bindUploadAssignTask() {
      if( this.ownerName == '') {
        tip.confirm('未选中负责人')
      }else if (this.workersCheckedList.length == 0){
        tip.confirm('未选人员')
      } else {
        console.log('-----------负责人： ' + this.ownerName)
        console.log('-----------成员： ' + this.workersCheckedList)
        // 准备 负责人的数据
        this.workersInfoList.forEach(item=>  {
          if(item.name == this.ownerName){
            this.repairRecordDetail.repairChargePerson = item.id;
            this.repairRecordDetail.customerFeedback = null;
            this.repairRecordDetail.forwardInfo = null;
          }
        });

        // 准备成员数据
        let memberList = [];
        this.workersCheckedList.forEach(item=> {
          this.workersInfoList.forEach(item2=> {
          if(item == item2.name)
            memberList.push({
              userId: item2.id,
              repairRecordId: this.machineDetail.id,
            })
          })
        });

      let assignTaskJson = await api.uploadRepairAssignTask({
      query: {
        repairRecord: JSON.stringify( this.repairRecordDetail ),
        repairMembers: JSON.stringify(memberList)
      }
    })
    if (assignTaskJson.data.code !== 200) {
      tip.confirm('派单失败！网络错误，请检查网络！')
    } else {
      tip.confirm('成功！返回上一页', 'BACK')
    }
  }
  },
        voicePlay() {
          console.log('播放...')
          this.isSpeaking = true
          const innerAudioContext = wepy.createInnerAudioContext()
          innerAudioContext.autoplay = true
          innerAudioContext.src = this.preRepairVoiceSrc
          innerAudioContext.onPlay(() => {
            console.log('开始播放')
          })
          innerAudioContext.onPause(() => {
            console.log('pause了')
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onStop(() => {
            console.log('stop了')
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onError((res) => {
            console.log(res.errMsg)
            console.log(res.errCode)
            this.isSpeaking = false
            this.$apply()
          })
          innerAudioContext.onEnded(() => {
            console.log('bo完了')
            this.isSpeaking = false
            this.$apply()
          })
        },
        changePreRepairImagePreview(e) {
          var self = this
          wepy.previewImage({
            current: e.currentTarget.dataset.src,
            urls: self.data.preRepairImageArr
          })
        },
          // accept order
        async bindAcceptOrder() {
          let acceptOrderJson = await api.updateRepairRecord({
            query: {
              id: this.repairRecordDetail.id,
              status: REPAIR_STATUS_REPAIRER_ACCEPTED
            }
          })
          console.log('接单结果：', acceptOrderJson)
          if (acceptOrderJson.data.code !== 200) {
            tip.confirm('接单失败！网络错误，请检查网络！')
          } else {
            tip.confirm('成功！返回上一页', 'BACK')
          }
        },
          // get repair result
        bindResultPickerChange(e) {
          console.log('结果picker发送选择改变，携带值为', e.detail.value)
          this.resultIndex = e.detail.value
          if (e.detail.value == 2 || e.detail.value == 1) {
            this.isResolved = true
          } else {
            this.isResolved = false
          }
          this.$apply()
        },
          // choose parts
        bindCheckboxChange(e) {
          console.log('部位picker发送选择改变，携带值为', e.detail.value)
          this.repairActualInfo.issuePosition = e.detail.value.toString()
        },
        showDescriptionInput() {
          this.hiddenDescription = true
          this.$apply()
        },
        listenerDescription() {
          this.hiddenDescription = false
          this.$apply()
        },
        bindIssueDescriptionInput(e) {
          this.repairActualInfo.issueDescription = e.detail.value
        },
        showMethodInput() {
          this.hiddenMethod = true
          this.$apply()
        },
        listenerMethod() {
          this.hiddenMethod = false
          this.$apply()
        },
        bindRepairMethodInput(e) {
          this.repairActualInfo.repairMethod = e.detail.value
        },
        async bindPreviewImage() {
          let res = await wepy.chooseImage({
            count: 3,
            sizeType: 'compressed '
          })
          if (res.errMsg === 'chooseImage:ok') {
            let tempFilePaths = res.tempFilePaths
            if (this.repairImageArr.length >= 3) {
              tip.alert('最多3张')
            } else if ((this.repairImageArr.length + tempFilePaths.length) > 3) {
              tip.alert('最多3张')
              this.hiddenPhoto = true
              for (var i = 0; i < (3 - this.repairImageArr.length); i++) {
                this.repairImageArr = this.repairImageArr.concat(tempFilePaths[i])
              }
              this.$apply()
            } else {
              this.repairImageArr = this.repairImageArr.concat(tempFilePaths)
              if (this.repairImageArr.length == 3) {
                this.hiddenPhoto = true
              }
              this.$apply()
            }
          }
        },

        changeRepairImagePreview(e) {
            // 控制点击事件在450ms内触发，加这层判断是为了防止长按时会触发点击事件
          if (this.touchEndTime - this.touchStartTime < 450) {
            wepy.previewImage({
              current: e.currentTarget.dataset.src,
              urls: this.repairImageArr
            })
          }
        },
          // 按钮触摸开始触发的事件
        touchStart(e) {
          console.log('touchStart: ', e)
          this.touchStartTime = e.timeStamp
        },

          // 按钮触摸结束触发的事件
        touchEnd(e) {
          console.log('touchEnd: ', e)
          this.touchEndTime = e.timeStamp
        },
          // 长按删除图片
        deleteImage(e) {
          console.log('longTap: ', e)
          for (var i = 0; i < this.repairImageArr.length; i++) {
            if (this.repairImageArr[i] == e.currentTarget.dataset.src) {
              this.repairImageArr.splice(i, 1)
              this.hiddenPhoto = false
              tip.alert('已删除')
              this.$apply()
              break
            }
          }
        },
          // show add parts modal
        showPartsInfo() {
          this.hiddenPartsInfo = true
          this.partsName = ''
          this.partsStatus = '1'
          this.radioChecked = true
          this.$apply()
        },
        bindPartInput(e) {
          this.partsName = e.detail.value
        },
          // get partsStatus by radio
        radioChange(e) {
          this.partsStatus = e.detail.value
          if (this.partsStatus == '2') {
            this.radioChecked = false
          }
        },
        // 添加配件更换信息到列表
        listenerPartsInfo() {
          if (this.partsName == '') {
            this.hiddenPartsInfo = false
          } else {
            this.hiddenPartsInfo = false
            this.partsInfoList = this.partsInfoList.concat({
              partsName: this.partsName,
              partsStatus: this.partsStatus,
              sendbackConfirmedPerson: 1
            })
          }
          this.$apply()
        },
          // 根据行号删除数组中的数据
        bindClear(e) {
          console.log('行号eeeeeeeeeeeeeeee', e)
          this.partsInfoList.splice(e, 1)
          this.$apply()
        },
        bindUploadFeedback() {
          if (this.resultIndex == 0) {
            // 维修结果：没修完
            if (this.repairActualInfo.issuePosition == '') {
              tip.alert('请选择故障部位')
            } else if (this.repairImageArr.length == 0) {
              tip.alert('请拍下故障照片')
            } else {
              wx.showModal({
                title: '提示',
                content: '请确认本次维修结果：没解决！',
                showCancel: true,
                confirmColor: '#007474',
                success: res => {
                  if (res.confirm) {
                    // this.uploadRepairNG()
                    this.uploadRepairInfo(REPAIR_STATUS_REPAIR_NG)
                  }
                }
              })
            }
          } else {
              // 维修结果：已修完
            if (this.repairActualInfo.issuePosition == '') {
              tip.alert('请选择故障部位')
            } else if (this.repairActualInfo.issueDescription == '') {
              tip.alert('请输入问题描述')
            } else if (this.repairActualInfo.repairMethod == '') {
              tip.alert('请输入处理方法')
            } else if (this.repairImageArr.length == 0) {
              tip.alert('请拍下故障照片')
            } else {
                // 维修结果：已修完
              wx.showModal({
                title: '提示',
                content: '请确认内容已填写完整，提交以后不得更改！',
                showCancel: true,
                confirmColor: '#007474',
                success: res => {
                  if (res.confirm) {
                    this.uploadRepairInfo(REPAIR_STATUS_REPAIR_OK)
                  }
                }
              })
            }
          }
        }
      };

      async uploadRepairNG() {
        this.repairRecordDetail.status = REPAIR_STATUS_REPAIR_NG
        let repairNGJson = await api.updateRepairRecord({
          query: {
            id: this.repairRecordDetail.id,
            status: REPAIR_STATUS_REPAIR_NG
          }
        })
        console.log('没修完提交结果：', repairNGJson)
        if (repairNGJson.data.code !== 200) {
          tip.confirm('失败！网络错误，请检查网络！')
        } else {
          tip.confirm('成功！将启动重新派单！', 'BACK', '没修完')
        }
      }

      async uploadRepairInfo(repairResult) {
        this.repairActualInfo.repairRecordId = this.machineDetail.id
        let repairFeedbackJson = await api.uploadRepairFeedback({
          query: {
            partsInfoList: this.partsInfoList,
            repairActualInfo: this.repairActualInfo
          }
        })
        console.log('add结果：', repairFeedbackJson)
        if (repairFeedbackJson.data.code === 200) {
          this.repairActualInfo.id = repairFeedbackJson.data.data
          this.repairActualInfo.uploadFilesAmount = this.repairImageArr.length.toString()
          let strRepairActualInfo = JSON.stringify(this.repairActualInfo)
          this.addRepairActualImageSrc(strRepairActualInfo, this.count, repairResult)
        } else {
          tip.confirm('上传信息失败！网络错误，请检查网络！' + repairFeedbackJson.data.message)
        }
      }

      async addRepairActualImageSrc(strRepairActualInfo, count, repairResult) {
        let updateImageSrcJson = await api.uploadRepairActualFiles({
          query: {
            filePath: this.repairImageArr[count],
            name: 'file',
            data: {
              repairActualInfo: strRepairActualInfo,
              repairResult: repairResult,
              fileNumber: count + 1
            }
          }
        })
        console.log('upload结果： ', updateImageSrcJson)
        let returnImageSrcData = JSON.parse(updateImageSrcJson.data)
        if (returnImageSrcData.code === 200) {
          console.log('count的值： ', count)
          if (count >= this.repairImageArr.length - 1) {
            tip.confirm('成功！返回上一页', 'BACK', '维修完成')
          } else {
            count++
            strRepairActualInfo = JSON.stringify(returnImageSrcData.data)
            console.log('return结果： ', strRepairActualInfo)
            this.addRepairActualImageSrc(strRepairActualInfo, count, repairResult)
          }
        } else {
          tip.confirm('失败！网络错误，请检查网络！')
        }
      }
      events = {};

      onLoad(options) {
        this.roleId = wepy.getStorageSync(ROLE_ID)
        console.log('from last page:', options)
        this.machineDetail = JSON.parse(options.machineDetail)
        if (this.machineDetail.status == REPAIR_STATUS_SIGNED_TO_REPAIRER) {
          this.isReady = true
        } else {
          this.isReady = false
        }
        this.getRepairRecord(this.machineDetail.id)
        this.getPositionList()
        this.getWorkers()
      };

      // get repair record detail by recordID
      async getRepairRecord(repairRecordId) {
        let repairRecordJson = await api.getRepairRecordList({
          query: {
            repairRecordId: repairRecordId
          }
        })
        console.log('get repairRecord list by id:', repairRecordJson)
        console.log(repairRecordJson.data.data.list)
        if (repairRecordJson.data.data.list.length > 0) {
          this.repairRecordDetail = repairRecordJson.data.data.list[0]
          if (this.repairRecordDetail.repairRequestPictures) {
            let preRepairImageTmp = this.repairRecordDetail.repairRequestPictures.split(',')
            for (var i = 0; i < preRepairImageTmp.length; i++) {
              let temp = preRepairImageTmp[i].split('/aftersale')
              this.preRepairImageArr.push(APIMALL + temp[1])
            }
          }
          if (this.repairRecordDetail.repairRequestVoice) {
            let temp2 = this.repairRecordDetail.repairRequestVoice.split('/aftersale')
            this.preRepairVoiceSrc = APIMALL + temp2[1]
            console.log('声音：', this.preRepairVoiceSrc)
          }
          if (wepy.getStorageSync(USER_ID) == repairRecordJson.data.data.list[0].repairChargePerson) {
            this.isChargePerson = true
          } else {
            this.isChargePerson = false
          }

          //时间在这里转换，因为filter 无效
            var time = new Date(parseInt(this.repairRecordDetail.facoryDate))
            this.repairRecordDetail.facoryDate = time.getFullYear() + '/' + (time.getMonth() + 1) + '/' + time.getDate()

        } else {
          tip.confirm('获取信息出错！网络错误，请检查网络', 'BACK')
        }
        this.$apply()
      };

      // get issue position list
      async getPositionList() {
        let positionListJson = await api.getIssuePositionList()
        console.log('get position list: ', positionListJson)
        this.partMark = positionListJson.data.data.list
        this.$apply()
      };

      // get workers list
      async getWorkers() {
        let worksJson = await api.getWorkers({
          query: {
            agentId: 0
          }
        })
        console.log('get workers: ', worksJson)
        this.workersInfoListinOwner = worksJson.data.data.list
    	this.workersInfoList = worksJson.data.data.list
        this.$apply()
      };

      // filter 没法用
//  filters: {
//
//    filterDateString(strDate)
//    {
//      if (isUndefined(strDate) || isNull(strDate) || strDate.length == 0) {
//        return '';
//      }
//      let resDate = new Date(strDate);
//      return "ffff"
//      //return resDate.format("yyyy-MM-dd");
//    }
//  }
        // Other properties
    }
</script>

<style lang="less">
  page {
    padding-bottom: 120rpx;
  }
  .picker_view {
    width: 160rpx;
    background: rgba(0,116,116,0.10);
    border: 1rpx solid #007474;
    border-radius: 10rpx;
    text-align: center;
    margin-left: 30rpx;
  .picker_tx {
    font-family: PingFangSC-Regular;
    color: #007474;
    letter-spacing: 0;
  }
  }
  .player_btn {
    width: 300rpx;
    background: #007474;
    color: #ffffff;
    border-radius: 100rpx;
    margin-left: 15rpx;
  }
  .playing_btn {
    width: 300rpx;
    opacity: 0.12;
    background: #007474;
    color: #ffffff;
    border-radius: 100rpx;
    margin-left: 15rpx;
  }
  .checkbox_label {
    width: 100%;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }
  .checkbox_view {
    font-family: PingFangSC-Regular;
    font-size: 30rpx;
    color: #333333;
    letter-spacing: 0;
    align-items: center;
    margin-left: 30rpx;
    margin-top: 15rpx;
    margin-bottom: 15rpx;
  }
  .part_input {
    width: 340rpx;
    height: 66rpx;
    border: 1rpx solid #007474;
    border-radius: 6rpx;
    font-family: PingFangSC-Regular;
    font-size: 30rpx;
    color: #3B403D;
    letter-spacing: 0;
    margin-left: 15rpx;
    padding-left: 10rpx;
  }
  .radio {
    margin-right: 50rpx;
    margin-left: 30rpx;
    font-size: 30rpx;
  }
  .add_btn {
    width: 100%;
    border: 1rpx solid #007474;
    box-shadow: 0 6rpx 14rpx 0 rgba(0,116,116,0.20);
    border-radius: 10rpx;
    font-family: PingFangSC-Regular;
    font-size: 30rpx;
    color: #007474;
    letter-spacing: 0;
    text-align: center;
  }
  .photo_image {
    margin-right: 20rpx;
    margin-top: 20rpx;
    width: 160rpx;
    height: 160rpx;
  }
</style>